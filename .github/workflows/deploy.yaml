name: 🚀 Build and Deploy React App to GHCR and Server

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # GitHub 호스티드 러너

    permissions:
      contents: read
      packages: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🐙 Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: 🏗️ Set lowercase image name
        id: image
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE=ghcr.io/$OWNER_LC/my-vite-app:latest" >> "$GITHUB_ENV"

      - name: 🔧 Set up QEMU and Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🛠️ Build and push multi-arch Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64
            -t $IMAGE \
            -f ./docker/development/Dockerfile \
            --push .

  deploy-to-server:
    runs-on: self-hosted  # 당신의 서버에서 실행
    needs: build-and-push

    steps:
      - name: 🐙 Log in to GHCR on self-hosted runner
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: 🚀 Pull and restart container
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE=ghcr.io/$OWNER_LC/my-vite-app:latest
          docker pull $IMAGE
          docker stop my-vite-app || true
          docker rm my-vite-app || true
          docker run -d -p 80:80 --name my-vite-app $IMAGE
